@page "/dvdrental"
@attribute [StreamRendering]

<PageTitle>DVD Rental</PageTitle>

<h1>DVD Rental</h1>

<p>This component demonstrates grabbing data from PostgreSQL Server.</p>

@if (films == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Length</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var film in films)
            {
                <tr>
                    <td>@film.title</td>
                    <td>@film.length</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Film[]? films;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        @* await Task.Delay(500);

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
        {
            Date = startDate.AddDays(index),
            TemperatureC = Random.Shared.Next(-20, 55),
            Summary = summaries[Random.Shared.Next(summaries.Length)]
        }).ToArray(); *@
    }

    private class Film
    {
        public string title { get; set; }
        public int length { get; set; }
    }
}
